name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Only run on code changes (skip docs-only changes)
    paths:
      - "src/**/*.ts"
      - "src/**/*.js"
      - ".github/workflows/**"
      - "package.json"
      - "tsconfig.json"

jobs:
  claude-review:
    # Skip review for WIP, draft PRs, or when explicitly skipped
    if: |
      !github.event.pull_request.draft &&
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, 'WIP')

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Required for Claude to comment on PRs
      issues: write         # Required for Claude to comment on issues
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"

          # Project-specific review prompt for cc-statusline
          direct_prompt: |
            You are reviewing a PR for **cc-statusline**, a CLI tool that generates custom statuslines for Claude Code.

            ## Project Context
            - TypeScript CLI tool using ESM modules
            - Generates bash scripts for terminal statuslines
            - Uses Commander.js, Inquirer.js, Chalk, Ora
            - Generated bash scripts must be POSIX-compliant

            ## Review Checklist

            ### 1. Version Consistency (CRITICAL)
            - If version changed, verify consistency across:
              - package.json
              - src/index.ts (VERSION constant)
              - src/generators/bash-generator.ts (VERSION constant)

            ### 2. Documentation
            - CHANGELOG.md updated for user-facing changes
            - README.md examples still accurate
            - CLAUDE.md updated if dev workflow changed

            ### 3. TypeScript Code Quality
            - ESM imports use .js extensions (e.g., `from './file.js'`)
            - Strict type checking (no `any` without justification)
            - 2-space indentation, no semicolons
            - Conventional commit message format

            ### 4. Bash Script Quality (if changes to src/generators/ or src/features/)
            - POSIX compliance (no bashisms)
            - Proper quote escaping in template strings
            - Graceful fallbacks for missing dependencies (jq, git, ccusage)
            - Error handling for edge cases

            ### 5. Testing & Performance
            - Are tests needed for this change?
            - Performance implications considered? (target: <500ms execution)
            - Breaking changes documented?

            ## Review Style
            - Be specific and actionable
            - Cite line numbers when suggesting changes
            - Explain the "why" behind suggestions
            - Acknowledge good practices
            - For first-time contributors, be extra welcoming

            ## Severity Levels
            Use these prefixes:
            - ðŸ”´ BLOCKER: Must fix before merge
            - ðŸŸ¡ SUGGESTION: Consider improving
            - ðŸŸ¢ NITPICK: Optional style improvement
            - ðŸ’¡ TIP: Educational comment

          # Use sticky comments to keep PR conversation clean
          use_sticky_comment: true
